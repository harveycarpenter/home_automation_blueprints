blueprint:
  name: Philips Tap Dial Switch with Scene Control and Double Tap
  description: >
    Control scenes with a Philips Hue Tap Switch using simple double-tap detection with timers.
  domain: automation
  input:
    remote:
      name: Philips Hue Tap Switch
      selector:
        device:
          integration: zha
          manufacturer: Signify Netherlands B.V.
          model: RDM002
    first_scene:
      name: First Scene (Single Tap)
      selector:
        entity:
          domain: scene
    first_double_scene:
      name: (OPTIONAL) First Scene (Double Tap)
      default: ""
      selector:
        entity:
          domain: scene
    second_scene:
      name: Second Scene (Single Tap)
      default: ""
      selector:
        entity:
          domain: scene
    second_double_scene:
      name: (OPTIONAL) Second Scene (Double Tap)
      default: ""
      selector:
        entity:
          domain: scene
    third_scene:
      name: Third Scene (Single Tap)
      default: ""
      selector:
        entity:
          domain: scene
    third_double_scene:
      name: (OPTIONAL) Third Scene (Double Tap)
      default: ""
      selector:
        entity:
          domain: scene
    fourth_scene:
      name: Fourth Scene (Single Tap)
      default: ""
      selector:
        entity:
          domain: scene
    fourth_double_scene:
      name: (OPTIONAL) Fourth Scene (Double Tap)
      default: ""
      selector:
        entity:
          domain: scene
    dimmable_light:
      name: Dimmable Light
      default: ""
      selector:
        target:
          entity: {}
    dim_scale:
      name: Dimming Scale
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 5.0
          step: 0.01

mode: restart
max_exceeded: silent

variables:
  scene_map:
    "1": { single: !input first_scene, double: !input first_double_scene }
    "0": { single: !input second_scene, double: !input second_double_scene }
    "5": { single: !input third_scene, double: !input third_double_scene }
    "4": { single: !input fourth_scene, double: !input fourth_double_scene }

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input "remote"

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      scene: "{{ trigger.event.data.params.scene_id | string }}"
      step_size: "{{ trigger.event.data.params.step_size | default(0) }}"
      step_mode: "{{ trigger.event.data.params.step_mode | default('') }}"

  - choose:
      # Handle button presses
      - conditions: "{{ 'short_release' in command }}"
        sequence:
          - variables:
              current_scene: "{{ scene_map[button] }}"
              has_double: "{{ current_scene.double != '' }}"
          
          # Debug current scene resolution
          - service: logbook.log
            data:
              name: "Scene Resolution"
              message: "Button: {{ button }}, Current scene: {{ current_scene }}, Has double: {{ has_double }}"
          
          - choose:
              # If double-tap scene is configured, wait for potential second press
              - conditions: "{{ has_double }}"
                sequence:
                  - wait_for_trigger:
                      - platform: event
                        event_type: zha_event
                        event_data:
                          device_id: !input "remote"
                          command: "{{ command }}"
                    timeout: "00:00:00.5"
                    continue_on_timeout: true
                  
                  - choose:
                      # Double tap detected
                      - conditions: "{{ wait.trigger is defined }}"
                        sequence:
                          - service: logbook.log
                            data:
                              name: "Double Tap"
                              message: "Executing double tap scene: {{ current_scene.double }}"
                          - condition: "{{ current_scene.double != '' and current_scene.double != none }}"
                          - service: scene.turn_on
                            target:
                              entity_id: "{{ current_scene.double }}"
                    # Single tap (timeout occurred)
                    default:
                      - service: logbook.log
                        data:
                          name: "Single Tap"
                          message: "Executing single tap scene: {{ current_scene.single }}"
                      - condition: "{{ current_scene.single != '' and current_scene.single != none }}"
                      - service: scene.turn_on
                        target:
                          entity_id: "{{ current_scene.single }}"
            
            # No double-tap configured, execute single tap immediately
            default:
              - service: logbook.log
                data:
                  name: "Single Tap (No Double)"
                  message: "Executing single tap scene: {{ current_scene.single }}"
              - condition: "{{ current_scene.single != '' and current_scene.single != none }}"
              - service: scene.turn_on
                target:
                  entity_id: "{{ current_scene.single }}"

      # Handle brightness up
      - conditions:
          - "{{ command == 'step_with_on_off' }}"
          - "{{ step_mode == 'StepMode.Up' }}"
        sequence:
          - service: light.turn_on
            target: !input "dimmable_light"
            data:
              brightness_step_pct: "{{ step_size * dim_scale }}"

      # Handle brightness down  
      - conditions:
          - "{{ command == 'step_with_on_off' }}"
          - "{{ step_mode == 'StepMode.Down' }}"
        sequence:
          - service: light.turn_on
            target: !input "dimmable_light"
            data:
              brightness_step_pct: "{{ -(step_size * dim_scale) }}"
