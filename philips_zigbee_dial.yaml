blueprint:
  name: Philips Tap Dial Switch with Scene Control, Double Tap, and Dim
  description: >
    Control scenes with a Philips Hue Tap Switch. Use the four buttons to control up to four scenes with an on/off toggle, detect double-taps, and dim a selected light.
  domain: automation
  input:
    remote:
      name: Philips Hue Tap Switch
      selector:
        device:
          integration: zha
          manufacturer: Signify Netherlands B.V.
          model: RDM002
    first_scene:
      name: First Scene (Single Tap)
      description: The scene to activate with the first button single tap
      selector:
        entity:
          domain: scene
    first_double_scene:
      name: (OPTIONAL) First Scene (Double Tap)
      description: The scene to activate with the first button double tap
      default: {}
      selector:
        entity:
          domain: scene
    second_scene:
      name: Second Scene (Single Tap)
      description: The scene to activate with the second button single tap
      default: {}
      selector:
        entity:
          domain: scene
    second_double_scene:
      name: (OPTIONAL) Second Scene (Double Tap)
      description: The scene to activate with the second button double tap
      default: {}
      selector:
        entity:
          domain: scene
    third_scene:
      name: Third Scene (Single Tap)
      description: The scene to activate with the third button single tap
      default: {}
      selector:
        entity:
          domain: scene
    third_double_scene:
      name: (OPTIONAL) Third Scene (Double Tap)
      description: The scene to activate with the third button double tap
      default: {}
      selector:
        entity:
          domain: scene
    fourth_scene:
      name: Fourth Scene (Single Tap)
      description: The scene to activate with the fourth button single tap
      default: {}
      selector:
        entity:
          domain: scene
    fourth_double_scene:
      name: (OPTIONAL) Fourth Scene (Double Tap)
      description: The scene to activate with the fourth button double tap
      default: {}
      selector:
        entity:
          domain: scene
    dimmable_light:
      name: Dimmable Light
      description: "Select the light to dim."
      default: {}
      selector:
        target:
          entity: {}
    dim_scale:
      name: Dimming Scale
      description: "Scale factor for dimming. Lower number for gradual dimming, larger for faster dimming."
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 5.0
          step: 0.01
  source_url: https://github.com/apollo1220/blueprints/blob/main/philips_zigbee_dial.yaml

mode: parallel
max_exceeded: silent

variables:
  first_scene: !input first_scene
  first_double_scene: !input first_double_scene
  second_scene: !input second_scene
  second_double_scene: !input second_double_scene
  third_scene: !input third_scene
  third_double_scene: !input third_double_scene
  fourth_scene: !input fourth_scene
  fourth_double_scene: !input fourth_double_scene
  dimmable_light: !input dimmable_light
  dim_scale: !input dim_scale

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      scene: >-
        {% if trigger.event.data.params is defined and trigger.event.data.params.scene_id is defined %}
          {{ trigger.event.data.params.scene_id }}
        {% endif %}
      step_size: >-
        {% if trigger.event.data.params is defined and trigger.event.data.params.step_size is defined %}
          {{ trigger.event.data.params.step_size }}
        {% endif %}
      step_mode: >-
        {% if trigger.event.data.params is defined and trigger.event.data.params.step_mode is defined %}
          {{ trigger.event.data.params.step_mode }}
        {% endif %}

  - choose:

      # -------- Press handling: wait briefly to decide single vs double --------
      - conditions: "{{ command == 'recall' }}"
        sequence:
          - wait_for_trigger:
              - platform: event
                event_type: zha_event
                event_data:
                  device_id: !input remote
                  command: recall
                  params:
                    scene_id: "{{ scene }}"
            timeout: "00:00:0.35"
            continue_on_timeout: true

          - variables:
              is_double: "{{ wait.trigger is not none }}"

          - choose:
              # ---- Double tap branch ----
              - conditions: "{{ is_double }}"
                sequence:
                  - choose:
                      - conditions: "{{ scene == 1 and (first_double_scene | default('') | string) | length > 0 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input first_double_scene
                      - conditions: "{{ scene == 0 and (second_double_scene | default('') | string) | length > 0 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input second_double_scene
                      - conditions: "{{ scene == 5 and (third_double_scene | default('') | string) | length > 0 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input third_double_scene
                      - conditions: "{{ scene == 4 and (fourth_double_scene | default('') | string) | length > 0 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input fourth_double_scene
              # ---- Single tap fallback ----
              - default:
                  - choose:
                      - conditions: "{{ scene == 1 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input first_scene
                      - conditions: "{{ scene == 0 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input second_scene
                      - conditions: "{{ scene == 5 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input third_scene
                      - conditions: "{{ scene == 4 }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input fourth_scene

      # -------- Brightness up --------
      - conditions:
          - "{{ command == 'step_with_on_off' }}"
          - "{{ step_mode in ['StepMode.Up', 0, '0'] }}"
        sequence:
          - service: light.turn_on
            target: !input dimmable_light
            data:
              brightness_step_pct: "{{ step_size * dim_scale }}"
              transition: 1

      # -------- Brightness down --------
      - conditions:
          - "{{ command == 'step_with_on_off' }}"
          - "{{ step_mode in ['StepMode.Down', 1, '1'] }}"
        sequence:
          - service: light.turn_on
            target: !input dimmable_light
            data:
              brightness_step_pct: "{{ -step_size * dim_scale }}"
              transition: 1
